{"version":3,"sources":["components/Container/Container.js","components/Modal/Modal.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","galleryApi.js","GalleryView.js","App.js","index.js"],"names":["Container","children","className","Modal","handleCloseClick","event","currentTarget","target","code","props","onClose","window","addEventListener","this","removeEventListener","onClick","Component","Searchbar","state","query","handleChange","e","setState","value","handleSubmit","preventDefault","onSubmit","type","onChange","autoComplete","autoFocus","placeholder","ImageGalleryItem","src","alt","dataSource","data-source","ImageGallery","gallery","map","id","webformatURL","largeImageURL","tags","Button","FetchGallery","searchQuery","currentPage","pageSize","url","fetch","then","response","json","hits","catch","error","console","log","propTypes","PropTypes","string","isRequired","number","GalleryView","isLoading","onChangeQuery","fetchGallery","options","prevState","finally","scrollTo","top","document","documentElement","scrollHeight","behavior","prevProps","openModal","length","App","showModal","largeImageUrl","dataset","source","toggleModal","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fd8b9b7e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Container.css';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Modal.css';\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleCloseClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleCloseClick);\r\n  }\r\n\r\n  handleCloseClick = event => {\r\n    if (event.currentTarget === event.target || event.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.handleCloseClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Searchbar.css';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ query: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ImageGalleryItem.css';\r\n\r\nconst ImageGalleryItem = ({ src, alt, dataSource }) => {\r\n  return (\r\n    <img\r\n      src={src}\r\n      alt={alt}\r\n      data-source={dataSource}\r\n      className=\"ImageGalleryItem-image\"\r\n    />\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  dataSource: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport './ImageGallery.css';\r\n\r\nconst ImageGallery = ({ gallery, onClick }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {gallery.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n        <li className=\"ImageGalleryItem\" key={id} onClick={onClick}>\r\n          <ImageGalleryItem\r\n            src={webformatURL}\r\n            alt={tags}\r\n            dataSource={largeImageURL}\r\n            className=\"ImageGalleryItem-image\"\r\n          ></ImageGalleryItem>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  gallery: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Button.css';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button className=\"Button\" type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst apiKey = '20386842-9f390c2ddb67ac927c9e310bb';\r\n\r\nconst FetchGallery = ({ searchQuery = '', currentPage = 1, pageSize = 12 }) => {\r\n  const url = `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${currentPage}&per_page=${pageSize}&key=${apiKey}`;\r\n\r\n  return fetch(url)\r\n    .then(response => response.json())\r\n    .then(({ hits }) => {\r\n      currentPage += 1;\r\n      return hits;\r\n    })\r\n    .catch(error => console.log(error));\r\n};\r\n\r\nFetchGallery.propTypes = {\r\n  searchQuery: PropTypes.string.isRequired,\r\n  currentPage: PropTypes.number,\r\n  pageSize: PropTypes.number,\r\n};\r\n\r\nexport default FetchGallery;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Searchbar from './components/Searchbar';\r\nimport ImageGallery from './components/ImageGallery';\r\nimport Button from './components/Button';\r\nimport FetchGallery from './galleryApi';\r\n\r\nclass GalleryView extends Component {\r\n  static propTypes = {\r\n    openModal: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    query: '',\r\n    gallery: [],\r\n    currentPage: 1,\r\n    searchQuery: '',\r\n    isLoading: false,\r\n    error: null,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchQuery !== this.state.searchQuery) {\r\n      this.fetchGallery();\r\n    }\r\n  }\r\n\r\n  onChangeQuery = query => {\r\n    this.setState({\r\n      searchQuery: query,\r\n      currentPage: 1,\r\n      gallery: [],\r\n      error: null,\r\n      largeImageURL: '',\r\n    });\r\n  };\r\n\r\n  fetchGallery = () => {\r\n    const { currentPage, searchQuery } = this.state;\r\n    const options = { searchQuery, currentPage };\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    FetchGallery(options)\r\n      .then(gallery => {\r\n        this.setState(prevState => ({\r\n          gallery: [...prevState.gallery, ...gallery],\r\n          currentPage: prevState.currentPage + 1,\r\n        }));\r\n      })\r\n      .catch(error => this.setState({ error }))\r\n      .finally(() => this.setState({ isLoading: false }))\r\n      .finally(() => {\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: 'smooth',\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { gallery, isLoading, error } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {error && <h1>Error!</h1>}\r\n        <Searchbar onSubmit={this.onChangeQuery} />\r\n\r\n        <ImageGallery\r\n          gallery={gallery}\r\n          onClick={this.props.openModal}\r\n        ></ImageGallery>\r\n\r\n        {isLoading && <p>Loading...</p>}\r\n        {gallery.length > 0 && <Button onClick={this.fetchGallery}></Button>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GalleryView;\r\n","import React, { Component } from 'react';\nimport Container from './components/Container';\nimport Modal from './components/Modal';\nimport GalleryView from './GalleryView';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    showModal: false,\n    largeImageURL: '',\n  };\n\n  openModal = event => {\n    const largeImageUrl = event.target.dataset.source;\n    this.setState({ largeImageURL: largeImageUrl });\n\n    this.toggleModal();\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const { showModal } = this.state;\n\n    return (\n      <Container>\n        <GalleryView openModal={this.openModal}></GalleryView>\n\n        {showModal && (\n          <Modal onClick={this.openModal} onClose={this.toggleModal}>\n            <img src={this.state.largeImageURL} alt=\"\" />\n          </Modal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}